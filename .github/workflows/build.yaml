name: Build

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      CR_PAT_USER: devplayer0
      REPO: ghcr.io/netsoc/iamd

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: image=moby/buildkit:master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.CR_PAT_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: |
            ${{ env.REPO }}:latest
            ${{ env.REPO }}:${{ github.sha }}

  js_client:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Run openapi-generator
        run: |
          npx @openapitools/openapi-generator-cli@cli-4.3.1 generate \
            -g javascript \
            -i static/api.yaml \
            -p projectName="@netsoc/iam" \
            -o js-client/

      - name: Install dependencies
        run: npm install
        working-directory: js-client/

      - name: Publish
        run: |
          npm version "$(node -p "require('./package.json').version")-$(echo ${{ github.sha }} | cut -c 1-8)"
          npm publish --access public
        working-directory: js-client/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
